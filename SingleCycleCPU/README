# Single Cycle CPU

# Overview
This was a project that I did for my computer architecture 1 class. This project was built week by week as labs, with the final lab being the assembly of all the pieces that we created. We used a combination of VHDL and block diagrams, with the final assembly being a block diagram. This CPU is not pipelined, it will have only one instruction in the CPU at a time.

# What it does
This CPU implements the ARM v4 ISA. It uses the 5 stages of an ARM CPU, fetch, decode, execute, memory, and write back. The fetch stage takes in the program counter value, which will either be pc+4 or the branch address, then it fetches the instruction. Next the instruction is sent to decode, where the upper 12-bits of the instruction are sent to the control and the entire instruction, pc+8, and write back data is sent to the decoder. Then from the decoder if there is a branch, the address is sent to the pc+4 and branch address multiplexer, the RD1 and RD2 values, and the immediate value if there was one. The execute stage takes in the RD1, RD2, and immediate values along with the ALU control values. The execute stage then executes the given operation using the ALU and outputs the result and the zero, carry, negative, and overflow flags. The ALU output is then sent to memory and the RD2 value is sent to the memory output. Finally, the ALU output is sent to the write back multiplexer along with the memory retrieval,then a control select signal will decide which to send to write back.

# Takeaways 
This class showed me just how important abstracting yourself to an appropriate level can be. The seemingly immense complexity of a CPU can become much simpler when you focus on one component at a time. Sure, looking at the entirety of a fully implemented microarchitecture can be overwhelming, but focusing on one component at a time can help you build up the idea of the microarchitecture in your mind. This idea of appropriately abstracting yourself has been a skill that I have utilized on the more complex projects I have done in my internship, robotics club, and other school projects. This allowed me to use a more efficient and effective approach to my projects because I try to break it up into easier to understand pieces. 
